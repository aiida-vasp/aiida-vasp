digraph {
    label="Vasp2wannierWorkflow behaviour"
    node [shape="box", style=rounded]; // start end
    start;
    end;
    node [shape="parallelogram", style=""]; // Inputs
    cont;
    //param;
    wdata;
    //wdata2;
    win;
    node[shape="diamond", style=""]; // Conditions
    has_win_c;
    has_win_p;
    //has_win_p2;
    //win_differ;
    //has_core;
    //has_core2;
    amn_required;
    has_amn;
    node[shape="ellipse", style=""]; // Calculations
    merge_win;
    //replace_win;
    //winrun;
    amnrun;
    //wannier;
    node [shape="triangle", style=""]; // Errors
    error;

    cont[label="continue_from"];
    has_win_c[label=".win in output?"];
    has_win_p[label="conflicting .win in params?"];
    //has_win_p2[label=".win in params?"];
    //win_differ[label="win conflict?"];
    merge_win[label="merge win"];
    win[label="wannier90.win"];
    wdata[label="WannierData"];
    //wdata2[label="WannierData"];
    amn_required[label=".amn required?"]

    start -> cont;
    //start -> param;
    //param -> has_win_p;
    //param -> has_win_p2;

    cont -> has_win_c;
    has_win_c -> error [label="no"];
    has_win_c -> has_win_p [label="yes"];
        has_win_p -> error [label="no"];
        has_win_p -> merge_win [label="yes"];
            merge_win -> win;
            win -> amn_required;
                amn_required -> wdata[label="no"];
                amn_required -> has_amn[label="yes"];
                    has_amn -> wdata[label="yes"];
                    has_amn -> amnrun[label="no"];
                        amnrun -> wdata;

            //has_core -> winrun [label="no"];
            //has_core -> amnrun [label="yes"];
        //winrun -> win;
        //win -> amnrun;

        //has_win_p2 -> win_differ [label="yes"];
            //win_differ -> merge_win [label="yes"];
    //            merge_win -> win2;
    //            win2 -> amnrun;
    //        win_differ -> amnrun [label="no"];

    wdata -> end;
    win -> end;
    //win2 -> wannier;
    //wannier -> end;

}
